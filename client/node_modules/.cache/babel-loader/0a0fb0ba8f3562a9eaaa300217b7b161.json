{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\monsters-rolodex\\\\ECOMMERCE-AMAZON-LIKE-WEBSITE\\\\src\\\\pages\\\\shoppage\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.util';\nimport { connect } from 'react-redux';\nimport { updateCollections as _updateCollections } from \"../../redux/shop/shop.actions\";\nimport withSpinner from '../../components/spinner/spinner.component';\nvar CollectionOverviewWithSpinner = withSpinner(CollectionsOverview);\nvar CollectionPageWithSpinner = withSpinner(CollectionPage);\n\nvar ShopPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  function ShopPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShopPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShopPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    _this.unsuscribeFromSnapshot = null;\n    return _this;\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var updateCollections = this.props.updateCollections;\n      var collectionRef = firestore.collection('collections');\n      collectionRef.get().then(function (snapshot) {\n        var collectionsMap = convertCollectionsSnapShotToMap(snapshot); //this is promise pattern\n\n        updateCollections(collectionsMap);\n\n        _this2.setState({\n          loading: false\n        });\n      }); //  collectionRef.onSnapshot( async snapshot=>{                         ///this is observqablle pattern \n      //  const collectionsMap=convertCollectionsSnapShotToMap(snapshot);\n      //     updateCollections(collectionsMap);\n      //      this.setState({loading:false})});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var match = this.props.match;\n      var loading = this.state.loading;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"shop-page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n            isLoading: loading\n          }, props, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 71\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:collectionId\"),\n        render: function render(props) {\n          return /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n            isLoading: loading\n          }, props, {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 80\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapdispatchToProps = function mapdispatchToProps(dispatch) {\n  return {\n    updateCollections: function updateCollections(collectionsMap) {\n      return dispatch(_updateCollections(collectionsMap));\n    }\n  };\n};\n\nexport default connect(null, mapdispatchToProps)(ShopPage);","map":{"version":3,"sources":["D:/monsters-rolodex/ECOMMERCE-AMAZON-LIKE-WEBSITE/src/pages/shoppage/shop.component.jsx"],"names":["React","Route","CollectionPage","CollectionsOverview","firestore","convertCollectionsSnapShotToMap","connect","updateCollections","withSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsuscribeFromSnapshot","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","match","path","Component","mapdispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,8BAAzD;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAASC,iBAAiB,IAAjBA,kBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,IAAMC,6BAA6B,GAACD,WAAW,CAACL,mBAAD,CAA/C;AACA,IAAMO,yBAAyB,GAAEF,WAAW,CAACN,cAAD,CAA5C;;IAEMS,Q;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,OAAO,EAAC;AADN,K;UAINC,sB,GAAuB,I;;;;;;wCACJ;AAAA;;AAAA,UACRP,iBADQ,GACY,KAAKQ,KADjB,CACRR,iBADQ;AAElB,UAAMS,aAAa,GAACZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAApB;AACDD,MAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,UAAAC,QAAQ,EAAE;AAC/B,YAAMC,cAAc,GAAChB,+BAA+B,CAACe,QAAD,CAApD,CAD+B,CACmC;;AAC/Db,QAAAA,iBAAiB,CAACc,cAAD,CAAjB;;AACC,QAAA,MAAI,CAACC,QAAL,CAAc;AAACT,UAAAA,OAAO,EAAC;AAAT,SAAd;AAA+B,OAHvC,EAHmB,CAQnB;AACA;AACA;AACA;AACC;;;6BACO;AAAA;;AAAA,UACGU,KADH,GACU,KAAKR,KADf,CACGQ,KADH;AAAA,UAEGV,OAFH,GAEc,KAAKD,KAFnB,CAEGC,OAFH;AAGJ,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,YAAKU,KAAK,CAACC,IAAX,CAAjB;AAAoC,QAAA,MAAM,EAAE,gBAACT,KAAD;AAAA,8BAAU,oBAAC,6BAAD;AAA+B,YAAA,SAAS,EAAEF;AAA1C,aAAuDE,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAV;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,mBAAX;AAA4C,QAAA,MAAM,EAAG,gBAACT,KAAD;AAAA,8BAAU,oBAAC,yBAAD;AAA2B,YAAA,SAAS,EAAEF;AAAtC,aAAmDE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAV;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAKH;;;;EA3BkBf,KAAK,CAACyB,S;;AA6B7B,IAAMC,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,QAAD;AAAA,SAAa;AAClCpB,IAAAA,iBAAiB,EAAC,2BAAAc,cAAc;AAAA,aAAEM,QAAQ,CAACpB,kBAAiB,CAACc,cAAD,CAAlB,CAAV;AAAA;AADE,GAAb;AAAA,CAAzB;;AAKA,eAAef,OAAO,CAAC,IAAD,EAAMoB,kBAAN,CAAP,CAAiCf,QAAjC,CAAf","sourcesContent":["import React from \"react\";\r\nimport {Route } from 'react-router-dom'\r\nimport CollectionPage from '../collection/collection.component'\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\r\nimport {firestore, convertCollectionsSnapShotToMap} from '../../firebase/firebase.util'\r\nimport {connect } from 'react-redux';\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\nimport withSpinner from '../../components/spinner/spinner.component';\r\nconst CollectionOverviewWithSpinner=withSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner =withSpinner(CollectionPage);\r\n\r\nclass ShopPage extends React.Component{\r\n    state={\r\n        loading:true\r\n    };\r\n\r\n    unsuscribeFromSnapshot=null;\r\n    componentDidMount(){\r\n        const {updateCollections} =this.props;\r\n     const collectionRef=firestore.collection('collections');\r\n    collectionRef.get().then(snapshot=>{                       \r\n        const collectionsMap=convertCollectionsSnapShotToMap(snapshot);   //this is promise pattern\r\n           updateCollections(collectionsMap);\r\n            this.setState({loading:false})});\r\n\r\n    //  collectionRef.onSnapshot( async snapshot=>{                         ///this is observqablle pattern \r\n    //  const collectionsMap=convertCollectionsSnapShotToMap(snapshot);\r\n    //     updateCollections(collectionsMap);\r\n    //      this.setState({loading:false})});\r\n    }\r\n    render(){\r\n        const {match}=this.props;\r\n        const {loading } =this.state;\r\n        return(\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} render={(props)=>(<CollectionOverviewWithSpinner isLoading={loading} {...props}/>)}></Route>\r\n                <Route path={`${match.path}/:collectionId`} render ={(props)=>(<CollectionPageWithSpinner isLoading={loading} {...props}/>)} ></Route>\r\n        </div>);  \r\n    }\r\n}\r\nconst mapdispatchToProps=(dispatch)=>({\r\n    updateCollections:collectionsMap=>dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\n\r\nexport default connect(null,mapdispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}
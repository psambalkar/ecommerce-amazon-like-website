{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\monsters-rolodex\\\\ECOMMERCE-AMAZON-LIKE-WEBSITE\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\n\nimport React, { useState } from 'react';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart as _signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport \"./sign-up.styles.scss\";\n\nvar SignUp = function SignUp(_ref) {\n  var signUpStart = _ref.signUpStart;\n\n  var _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmpassword: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userCredentials = _useState2[0],\n      setCredentials = _useState2[1];\n\n  var displayName = userCredentials.displayName,\n      email = userCredentials.email,\n      password = userCredentials.password,\n      confirmpassword = userCredentials.confirmpassword;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(password !== confirmpassword)) {\n                _context.next = 4;\n                break;\n              }\n\n              alert(\"password don't match\");\n              return _context.abrupt(\"return\");\n\n            case 4:\n              signUpStart({\n                displayName: displayName,\n                email: email,\n                password: password\n              }); //    try{\n              //    const {user}=await auth.createUserWithEmailAndPassword(email,password)//this will return us an userauth obj on succesfull sign in\n              //    createUserProfileDocument(user,{displayName});//create the user profile based on email address store in firebase\n              //    this.setState({   //make everything empty after storig in firebase\n              //        displayName:'',\n              //        email:'',\n              //        password:'',\n              //        confirmpassword:''\n              //    })\n              //    }catch(err){\n              //    console.error(err);\n              //    }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handlechange = function handlechange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setCredentials(_objectSpread({}, userCredentials, _defineProperty({}, name, value)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"I do not have a account \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    value: displayName,\n    onChange: handlechange,\n    label: \"Display-name\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    onChange: handlechange,\n    label: \"Email\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    onChange: handlechange,\n    label: \"Password\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirmpassword\",\n    type: \"password\",\n    value: confirmpassword,\n    onChange: handlechange,\n    label: \"Confirm password\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"SIGN UP\")));\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUpStart: function signUpStart(userCredentials) {\n      return dispatch(_signUpStart(userCredentials));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["D:/monsters-rolodex/ECOMMERCE-AMAZON-LIKE-WEBSITE/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","displayName","email","password","confirmpassword","userCredentials","setCredentials","handleSubmit","event","preventDefault","alert","handlechange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React ,{useState} from 'react';\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux';\r\nimport \"./sign-up.styles.scss\";\r\nconst SignUp =({signUpStart})=>{\r\n    const [userCredentials,setCredentials]=useState({\r\n        displayName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmpassword:''})\r\n        const {displayName,email,password,confirmpassword}=userCredentials;\r\n\r\nconst   handleSubmit=async event=>{\r\n       event.preventDefault();\r\n       if(password!==confirmpassword){\r\n           alert(\"password don't match\");\r\n           return;\r\n       }\r\n       signUpStart({displayName,email,password});\r\n    //    try{\r\n    //    const {user}=await auth.createUserWithEmailAndPassword(email,password)//this will return us an userauth obj on succesfull sign in\r\n    //    createUserProfileDocument(user,{displayName});//create the user profile based on email address store in firebase\r\n    //    this.setState({   //make everything empty after storig in firebase\r\n    //        displayName:'',\r\n    //        email:'',\r\n    //        password:'',\r\n    //        confirmpassword:''\r\n    //    })\r\n    //    }catch(err){\r\n    //    console.error(err);\r\n    //    }\r\n\r\n      \r\n   }\r\n  const handlechange=event=>{\r\n    const{name,value}=event.target;\r\n    setCredentials({\r\n        ...userCredentials,\r\n        [name]:value\r\n    })\r\n}\r\n      return(\r\n            <div className=\"sign-up\">\r\n            <h2 className=\"title\">I do not have a account </h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className='sign-up-form'onSubmit={handleSubmit}>\r\n            <FormInput name=\"displayName\" type=\"text\" value={displayName} onChange={handlechange} label='Display-name' required  ></FormInput>\r\n            <FormInput name=\"email\" type=\"email\" value={email} onChange={handlechange} label='Email' required  ></FormInput>\r\n            <FormInput name=\"password\" type=\"password\" value={password} onChange={handlechange} label='Password' required ></FormInput>\r\n            <FormInput name=\"confirmpassword\" type=\"password\" value={confirmpassword} onChange={handlechange} label='Confirm password' required></FormInput>\r\n            <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n            </form>\r\n            </div>\r\n        )\r\n    \r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    signUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\r\n})\r\nexport default connect(null,mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}
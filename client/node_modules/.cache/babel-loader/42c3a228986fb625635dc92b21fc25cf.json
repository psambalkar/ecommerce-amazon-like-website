{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nvar config = {\n  apiKey: \"AIzaSyCdYSG_MEs3IdsB0fIfgf2MLZBJ2fJNfgk\",\n  authDomain: \"like-db.firebaseapp.com\",\n  databaseURL: \"https://like-db.firebaseio.com\",\n  projectId: \"like-db\",\n  storageBucket: \"like-db.appspot.com\",\n  messagingSenderId: \"279941861445\",\n  appId: \"1:279941861445:web:2e165a833ea580d059532c\",\n  measurementId: \"G-6C2DSF7LQE\"\n}; //to save user data in firebase database if it already doesnot exists\n\nexport var createUserProfileDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth, additionalData) {\n    var userRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (userAuth) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            userRef = firestore.doc(\"users/\".concat(userAuth.uid)); //documentrefrence objecet which is not actual data\n\n            _context.next = 5;\n            return userRef.get();\n\n          case 5:\n            snapShot = _context.sent;\n\n            if (snapShot.exists) {\n              _context.next = 17;\n              break;\n            }\n\n            displayName = userAuth.displayName, email = userAuth.email;\n            createdAt = new Date();\n            _context.prev = 9;\n            _context.next = 12;\n            return userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              createdAt: createdAt\n            }, additionalData));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](9);\n            console.log(\"error creating user\", _context.t0.message);\n\n          case 17:\n            return _context.abrupt(\"return\", userRef);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 14]]);\n  }));\n\n  return function createUserProfileDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var convertCollectionsSnapShotToMap = function convertCollectionsSnapShotToMap(collections) {\n  var transformedCollection = collections.docs.map(function (doc) {\n    var _doc$data = doc.data(),\n        title = _doc$data.title,\n        items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title: title,\n      items: items\n    };\n  });\n  return transformedCollection.reduce(function (accumulator, collection) {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport var getCurrentUser = function getCurrentUser() {\n  return new Promise(function (resolve, reject) {\n    var unsuscribe = auth.onAuthStateChanged(function (userAuth) {\n      unsuscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport var addCollectionsAndDocuments = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey, objectsToAdd) {\n    var CollectionRef, batch;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            //this methods add our shop data to the firestore taking collectionkey like hats ,sneaker,mens,womens ,etc and objects to nadd and stores in database\n            CollectionRef = firestore.collection(collectionKey);\n            batch = firestore.batch();\n            objectsToAdd.forEach(function (obj) {\n              var newDocRef = CollectionRef.doc();\n              batch.set(newDocRef, obj);\n            });\n            _context2.next = 5;\n            return batch.commit();\n\n          case 5:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addCollectionsAndDocuments(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfirebase.initializeApp(config);\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore();\nexport var googleprovider = new firebase.auth.GoogleAuthProvider();\ngoogleprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(googleprovider);\n};\nexport default firebase;","map":{"version":3,"sources":["D:/monsters-rolodex/ECOMMERCE-AMAZON-LIKE-WEBSITE/client/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","convertCollectionsSnapShotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","getCurrentUser","Promise","resolve","reject","unsuscribe","auth","onAuthStateChanged","addCollectionsAndDocuments","collectionKey","objectsToAdd","CollectionRef","batch","forEach","obj","newDocRef","commit","initializeApp","googleprovider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAMC,MAAM,GAAC;AACLC,EAAAA,MAAM,EAAE,yCADH;AAELC,EAAAA,UAAU,EAAE,yBAFP;AAGLC,EAAAA,WAAW,EAAE,gCAHR;AAILC,EAAAA,SAAS,EAAE,SAJN;AAKLC,EAAAA,aAAa,EAAE,qBALV;AAMLC,EAAAA,iBAAiB,EAAE,cANd;AAOLC,EAAAA,KAAK,EAAE,2CAPF;AAQLC,EAAAA,aAAa,EAAE;AARV,CAAb,C,CAUA;;AACA,OAAO,IAAMC,yBAAyB;AAAA,sEAAC,iBAAOC,QAAP,EAAgBC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAC/BD,QAD+B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAE7BE,YAAAA,OAF6B,GAErBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAFqB,EAEkB;;AAFlB;AAAA,mBAGdH,OAAO,CAACI,GAAR,EAHc;;AAAA;AAG7BC,YAAAA,QAH6B;;AAAA,gBAI/BA,QAAQ,CAACC,MAJsB;AAAA;AAAA;AAAA;;AAKxBC,YAAAA,WALwB,GAKLT,QALK,CAKxBS,WALwB,EAKZC,KALY,GAKLV,QALK,CAKZU,KALY;AAMzBC,YAAAA,SANyB,GAMf,IAAIC,IAAJ,EANe;AAAA;AAAA;AAAA,mBAQ1BV,OAAO,CAACW,GAAR;AACDJ,cAAAA,WAAW,EAAXA,WADC;AAEDC,cAAAA,KAAK,EAALA,KAFC;AAGDC,cAAAA,SAAS,EAATA;AAHC,eAIEV,cAJF,EAR0B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAe3Ba,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkC,YAAIC,OAAtC;;AAf2B;AAAA,6CAkB5Bd,OAlB4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA,kBAAzBH,yBAAyB;AAAA;AAAA;AAAA,GAA/B;AAsBP,OAAO,IAAMkB,+BAA+B,GAAC,SAAhCA,+BAAgC,CAACC,WAAD,EAAe;AACxD,MAAMC,qBAAqB,GAACD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqB,UAAAjB,GAAG,EAAE;AAAA,oBAC/BA,GAAG,CAACkB,IAAJ,EAD+B;AAAA,QAC5CC,KAD4C,aAC5CA,KAD4C;AAAA,QACtCC,KADsC,aACtCA,KADsC;;AAElD,WAAM;AACFC,MAAAA,SAAS,EAACC,SAAS,CAACH,KAAK,CAACI,WAAN,EAAD,CADjB;AAEFC,MAAAA,EAAE,EAACxB,GAAG,CAACwB,EAFL;AAGFL,MAAAA,KAAK,EAALA,KAHE;AAIFC,MAAAA,KAAK,EAALA;AAJE,KAAN;AAMH,GAR2B,CAA5B;AASA,SAAOL,qBAAqB,CAACU,MAAtB,CAA6B,UAACC,WAAD,EAAaC,UAAb,EAA0B;AAC1DD,IAAAA,WAAW,CAACC,UAAU,CAACR,KAAX,CAAiBI,WAAjB,EAAD,CAAX,GAA4CI,UAA5C;AACA,WAAOD,WAAP;AACH,GAHM,EAGL,EAHK,CAAP;AAKH,CAfM;AAgBP,OAAO,IAAME,cAAc,GAAC,SAAfA,cAAe,GAAI;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjC,QAAMC,UAAU,GAACC,IAAI,CAACC,kBAAL,CAAwB,UAAAtC,QAAQ,EAAE;AAC/CoC,MAAAA,UAAU;AACVF,MAAAA,OAAO,CAAClC,QAAD,CAAP;AACH,KAHgB,EAGfmC,MAHe,CAAjB;AAIH,GALM,CAAP;AAMH,CAPM;AAQP,OAAO,IAAMI,0BAA0B;AAAA,uEAAC,kBAAOC,aAAP,EAAqBC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACvEC,YAAAA,aAD8B,GAChBvC,SAAS,CAAC4B,UAAV,CAAqBS,aAArB,CADgB;AAE9BG,YAAAA,KAF8B,GAExBxC,SAAS,CAACwC,KAAV,EAFwB;AAGpCF,YAAAA,YAAY,CAACG,OAAb,CAAqB,UAAAC,GAAG,EAAE;AACtB,kBAAMC,SAAS,GAACJ,aAAa,CAACtC,GAAd,EAAhB;AACAuC,cAAAA,KAAK,CAAC9B,GAAN,CAAUiC,SAAV,EAAoBD,GAApB;AACH,aAHD;AAHoC;AAAA,mBAOvBF,KAAK,CAACI,MAAN,EAPuB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA,kBAA1BR,0BAA0B;AAAA;AAAA;AAAA,GAAhC;AASPlD,QAAQ,CAAC2D,aAAT,CAAuB1D,MAAvB;AACA,OAAO,IAAM+C,IAAI,GAAChD,QAAQ,CAACgD,IAAT,EAAX;AACP,OAAO,IAAMlC,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AACP,OAAO,IAAM8C,cAAc,GAAC,IAAI5D,QAAQ,CAACgD,IAAT,CAAca,kBAAlB,EAArB;AACPD,cAAc,CAACE,mBAAf,CAAmC;AAACC,EAAAA,MAAM,EAAC;AAAR,CAAnC;AACA,OAAO,IAAMC,gBAAgB,GAAC,SAAjBA,gBAAiB;AAAA,SAAIhB,IAAI,CAACiB,eAAL,CAAqBL,cAArB,CAAJ;AAAA,CAAvB;AACP,eAAe5D,QAAf","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n \r\nconst config={\r\n        apiKey: \"AIzaSyCdYSG_MEs3IdsB0fIfgf2MLZBJ2fJNfgk\",\r\n        authDomain: \"like-db.firebaseapp.com\",\r\n        databaseURL: \"https://like-db.firebaseio.com\",\r\n        projectId: \"like-db\",\r\n        storageBucket: \"like-db.appspot.com\",\r\n        messagingSenderId: \"279941861445\",\r\n        appId: \"1:279941861445:web:2e165a833ea580d059532c\",\r\n        measurementId: \"G-6C2DSF7LQE\"\r\n}\r\n//to save user data in firebase database if it already doesnot exists\r\nexport const createUserProfileDocument=async (userAuth,additionalData)=>{\r\n    if(!userAuth) return;\r\n    const userRef=firestore.doc(`users/${userAuth.uid}`);//documentrefrence objecet which is not actual data\r\n    const snapShot=await userRef.get();//snapshot obj which is actuual data we use .get method on refrence obj to get snapshot obj.with snapshot obj we can take name,email,etc and store in firebase database\r\n    if(!snapShot.exists){\r\n        const {displayName,email}=userAuth;\r\n        const createdAt=new Date();\r\n        try{\r\n       await userRef.set({\r\n            displayName,\r\n            email,\r\n            createdAt,\r\n            ...additionalData\r\n        })}\r\n        catch(err){\r\n            console.log(\"error creating user\",err.message);\r\n        }\r\n    }\r\n    return userRef;\r\n    \r\n\r\n}\r\nexport const convertCollectionsSnapShotToMap=(collections)=>{\r\n    const transformedCollection=collections.docs.map(doc=>{\r\n        const{title,items}=doc.data();\r\n        return{\r\n            routeName:encodeURI(title.toLowerCase()),\r\n            id:doc.id,\r\n            title,\r\n            items\r\n        }\r\n    });\r\n    return transformedCollection.reduce((accumulator,collection)=>{\r\n        accumulator[collection.title.toLowerCase()]=collection;\r\n        return accumulator;\r\n    },{})\r\n\r\n}\r\nexport const getCurrentUser=()=>{\r\n    return new Promise((resolve,reject)=>{\r\n        const unsuscribe=auth.onAuthStateChanged(userAuth=>{\r\n            unsuscribe();\r\n            resolve(userAuth);\r\n        },reject)\r\n    });\r\n};\r\nexport const addCollectionsAndDocuments=async (collectionKey,objectsToAdd)=>{    //this methods add our shop data to the firestore taking collectionkey like hats ,sneaker,mens,womens ,etc and objects to nadd and stores in database\r\n    const CollectionRef=firestore.collection(collectionKey);\r\n    const batch=firestore.batch();\r\n    objectsToAdd.forEach(obj=>{\r\n        const newDocRef=CollectionRef.doc();\r\n        batch.set(newDocRef,obj)\r\n    });\r\n    return await batch.commit();\r\n}\r\nfirebase.initializeApp(config);\r\nexport const auth=firebase.auth();\r\nexport const firestore=firebase.firestore();\r\nexport const googleprovider=new firebase.auth.GoogleAuthProvider();\r\ngoogleprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle=()=>auth.signInWithPopup(googleprovider);\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}
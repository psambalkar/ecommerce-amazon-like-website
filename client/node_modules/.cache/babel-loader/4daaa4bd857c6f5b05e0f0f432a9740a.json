{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(shopSagas);\n\nimport { call, put, takeLatest, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.util';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function fetchCollectionsAsync() {\n  var collectionRef, snapshot, collectionsMap;\n  return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          collectionRef = firestore.collection('collections');\n          _context.next = 4;\n          return collectionRef.get();\n\n        case 4:\n          snapshot = _context.sent;\n          _context.next = 7;\n          return call(convertCollectionsSnapShotToMap, snapshot);\n\n        case 7:\n          collectionsMap = _context.sent;\n          _context.next = 10;\n          return put(fetchCollectionsSuccess(collectionsMap));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return put(fetchCollectionsFailure(_context.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\nexport function fetchCollectionsStart() {\n  return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function shopSagas() {\n  return _regeneratorRuntime.wrap(function shopSagas$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([call(fetchCollectionsStart)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["D:/monsters-rolodex/ECOMMERCE-AMAZON-LIKE-WEBSITE/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","call","put","takeLatest","all","firestore","convertCollectionsSnapShotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":";;oDAKiBA,qB;qDAWAC,qB;qDAMAC,S;;AAtBjB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAA+BC,GAA/B,QAAyC,oBAAzC;AACA,SAASC,SAAT,EAAmBC,+BAAnB,QAAyD,8BAAzD;AACA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,gBAA9D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,SAAUX,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEIY,UAAAA,aAFJ,GAEkBL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAFlB;AAAA;AAGa,iBAAMD,aAAa,CAACE,GAAd,EAAN;;AAHb;AAGIC,UAAAA,QAHJ;AAAA;AAImB,iBAAMZ,IAAI,CAACK,+BAAD,EAAiCO,QAAjC,CAAV;;AAJnB;AAIIC,UAAAA,cAJJ;AAAA;AAKF,iBAAMZ,GAAG,CAACK,uBAAuB,CAACO,cAAD,CAAxB,CAAT;;AALE;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQN,iBAAMZ,GAAG,CAACM,uBAAuB,CAAC,YAAIO,OAAL,CAAxB,CAAT;;AARM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWP,OAAO,SAAUhB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMI,UAAU,CACZM,eAAe,CAACO,uBADJ,EAEZlB,qBAFY,CAAhB;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMP,OAAO,SAAUE,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMI,GAAG,CAAC,CAACH,IAAI,CAACF,qBAAD,CAAL,CAAD,CAAT;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, put, takeLatest,all} from 'redux-saga/effects';\r\nimport  {firestore,convertCollectionsSnapShotToMap} from '../../firebase/firebase.util';\r\nimport {fetchCollectionsSuccess,fetchCollectionsFailure} from './shop.actions';\r\nimport ShopActionTypes from './shop.types';\r\n  \r\nexport function* fetchCollectionsAsync(){    //generator function\r\n try{\r\n     const collectionRef=firestore.collection('collections');\r\n     const snapshot=yield collectionRef.get();\r\n     const collectionsMap=yield call(convertCollectionsSnapShotToMap,snapshot);\r\n     yield put(fetchCollectionsSuccess(collectionsMap))\r\n }catch(err)\r\n {\r\n yield put(fetchCollectionsFailure(err.message));\r\n }\r\n}\r\nexport function* fetchCollectionsStart(){\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}\r\nexport function* shopSagas(){\r\n    yield all([call(fetchCollectionsStart)]);\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\monsters-rolodex\\\\ECOMMERCE-AMAZON-LIKE-WEBSITE\\\\src\\\\components\\\\signin-component\\\\sign-in.component.jsx\";\nimport React from \"react\";\nimport \"./sign-in.styles.scss\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart as _googleSignInStart, emailSignInStart as _emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nvar SignIn = /*#__PURE__*/function (_React$Component) {\n  _inherits(SignIn, _React$Component);\n\n  function SignIn() {\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignIn).call(this));\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var emailSignInStart, _this$state, email, password;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                emailSignInStart = _this.props.emailSignInStart;\n                _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n                emailSignInStart(email, password);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"render\",\n    value: function render() {\n      var googleSignInStart = this.props.googleSignInStart;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sign-in\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        label: \"email\",\n        value: this.state.email,\n        required: true,\n        handleChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        label: \"password\",\n        value: this.state.password,\n        required: true,\n        handleChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CustomButton, {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n        type: \"button\",\n        isGoogleSignIn: true,\n        onClick: googleSignInStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, ' ', \"Sign In With google\", ' '))));\n    }\n  }]);\n\n  return SignIn;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    googleSignInStart: function googleSignInStart() {\n      return dispatch(_googleSignInStart());\n    },\n    emailSignInStart: function emailSignInStart(email, password) {\n      return dispatch(_emailSignInStart({\n        email: email,\n        password: password\n      }));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["D:/monsters-rolodex/ECOMMERCE-AMAZON-LIKE-WEBSITE/src/components/signin-component/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","handleSubmit","event","preventDefault","props","state","email","password","handleChange","target","value","name","setState","Component","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./sign-in.styles.scss\";\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport { googleSignInStart,emailSignInStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux';\r\nclass SignIn extends React.Component{\r\n    constructor(){\r\n    super();\r\n    this.state={\r\n        email:\"\",\r\n        password:\"\"\r\n    }\r\n    }\r\n    handleSubmit=async event=>{\r\n        event.preventDefault();\r\n        const {emailSignInStart}=this.props;\r\n        const{email,password}=this.state;\r\n        emailSignInStart(email,password);\r\n    }\r\n    handleChange=(event)=>{\r\n        const {value,name}=event.target;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n    render(){\r\n        const {googleSignInStart}=this.props\r\n        return(\r\n            <div className=\"sign-in\">\r\n                <h2 className='title'>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n            <form onSubmit={this.handleSubmit} >\r\n            <FormInput name=\"email\" type=\"email\" label='email' value={this.state.email} required handleChange={this.handleChange}></FormInput>\r\n            <FormInput name=\"password\" type=\"password\" label=\"password\" value={this.state.password} required handleChange={this.handleChange}></FormInput>\r\n            <div className=\"buttons\">\r\n            <CustomButton type=\"submit\">Sign In</CustomButton> \r\n            <CustomButton type='button'isGoogleSignIn  onClick={googleSignInStart} >{' '}Sign In With google{' '}</CustomButton>   \r\n            </div>\r\n            </form>\r\n            </div>\r\n            \r\n            )\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    googleSignInStart:()=>dispatch(googleSignInStart()),\r\n    emailSignInStart:(email,password)=>dispatch(emailSignInStart({email,password}))\r\n})\r\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}
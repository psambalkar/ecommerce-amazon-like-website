{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\monsters-rolodex\\\\ECOMMERCE-AMAZON-LIKE-WEBSITE\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React from 'react';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart as _signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\nimport \"./sign-up.styles.scss\";\n\nvar SignUp = /*#__PURE__*/function (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  function SignUp() {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignUp).call(this));\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var signUpStart, _this$state, displayName, email, password, confirmpassword;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                signUpStart = _this.props.signUpStart;\n                _this$state = _this.state, displayName = _this$state.displayName, email = _this$state.email, password = _this$state.password, confirmpassword = _this$state.confirmpassword;\n\n                if (!(password !== confirmpassword)) {\n                  _context.next = 6;\n                  break;\n                }\n\n                alert(\"password don't match\");\n                return _context.abrupt(\"return\");\n\n              case 6:\n                signUpStart({\n                  displayName: displayName,\n                  email: email,\n                  password: password\n                }); //    try{\n                //    const {user}=await auth.createUserWithEmailAndPassword(email,password)//this will return us an userauth obj on succesfull sign in\n                //    createUserProfileDocument(user,{displayName});//create the user profile based on email address store in firebase\n                //    this.setState({   //make everything empty after storig in firebase\n                //        displayName:'',\n                //        email:'',\n                //        password:'',\n                //        confirmpassword:''\n                //    })\n                //    }catch(err){\n                //    console.error(err);\n                //    }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handlechange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.state = {\n      displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmpassword: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmpassword = _this$state2.confirmpassword;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sign-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"I do not have a account \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        name: \"displayName\",\n        type: \"text\",\n        value: displayName,\n        onChange: this.handlechange,\n        label: \"Display-name\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: this.handlechange,\n        label: \"Email\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: this.handlechange,\n        label: \"Password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(FormInput, {\n        name: \"confirmpassword\",\n        type: \"password\",\n        value: confirmpassword,\n        onChange: this.handlechange,\n        label: \"Confirm password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(CustomButton, {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"SIGN UP\")));\n    }\n  }]);\n\n  return SignUp;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUpStart: function signUpStart(userCredentials) {\n      return dispatch(_signUpStart(userCredentials));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["D:/monsters-rolodex/ECOMMERCE-AMAZON-LIKE-WEBSITE/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","signUpStart","connect","SignUp","handleSubmit","event","preventDefault","props","state","displayName","email","password","confirmpassword","alert","handlechange","target","name","value","setState","Component","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport {connect} from 'react-redux';\r\nimport \"./sign-up.styles.scss\";\r\nclass SignUp extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            displayName:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            confirmpassword:\"\"\r\n        }\r\n    }\r\n   handleSubmit=async event=>{\r\n       event.preventDefault();\r\n       const {signUpStart} =this.props;\r\n       const {displayName,email,password,confirmpassword}=this.state;\r\n       if(password!==confirmpassword){\r\n           alert(\"password don't match\");\r\n           return;\r\n       }\r\n       signUpStart({displayName,email,password});\r\n    //    try{\r\n    //    const {user}=await auth.createUserWithEmailAndPassword(email,password)//this will return us an userauth obj on succesfull sign in\r\n    //    createUserProfileDocument(user,{displayName});//create the user profile based on email address store in firebase\r\n    //    this.setState({   //make everything empty after storig in firebase\r\n    //        displayName:'',\r\n    //        email:'',\r\n    //        password:'',\r\n    //        confirmpassword:''\r\n    //    })\r\n    //    }catch(err){\r\n    //    console.error(err);\r\n    //    }\r\n\r\n      \r\n   }\r\n   handlechange=event=>{\r\n    const{name,value}=event.target;\r\n    this.setState({\r\n        [name]:value\r\n    })\r\n}\r\n    render(){\r\n        const {displayName,email,password,confirmpassword}=this.state;\r\n        return(\r\n            <div className=\"sign-up\">\r\n            <h2 className=\"title\">I do not have a account </h2>\r\n            <span>Sign up with your email and password</span>\r\n            <form className='sign-up-form'onSubmit={this.handleSubmit}>\r\n            <FormInput name=\"displayName\" type=\"text\" value={displayName} onChange={this.handlechange} label='Display-name' required  ></FormInput>\r\n            <FormInput name=\"email\" type=\"email\" value={email} onChange={this.handlechange} label='Email' required  ></FormInput>\r\n            <FormInput name=\"password\" type=\"password\" value={password} onChange={this.handlechange} label='Password' required ></FormInput>\r\n            <FormInput name=\"confirmpassword\" type=\"password\" value={confirmpassword} onChange={this.handlechange} label='Confirm password' required></FormInput>\r\n            <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>({\r\n    signUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\r\n})\r\nexport default connect(null,mapDispatchToProps)(SignUp);\r\n"]},"metadata":{},"sourceType":"module"}
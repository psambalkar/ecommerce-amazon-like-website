{"ast":null,"code":"import { combineReducers } from 'redux';\nimport userReducer from './user/user-reducer';\nimport cartReducer from './cart/cart.reducer';\nimport shopReducer from './shop/shop-reducer';\nimport directoryReducer from './directory/directory.reducer';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; //locaalstorage from redux\n\nvar persistConfig = {\n  key: 'root',\n  storage: storage,\n  whitelist: ['cart'] ///only reducer which we want to persist \n\n};\nvar rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\nexport default persistReducer(persistConfig, rootReducer); ///modifying our rootreducer to take local storage from redux","map":{"version":3,"sources":["D:/monsters-rolodex/ECOMMERCE-AMAZON-LIKE-WEBSITE/client/src/redux/root-reducer.js"],"names":["combineReducers","userReducer","cartReducer","shopReducer","directoryReducer","persistReducer","storage","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,SAAQC,cAAR,QAA6B,eAA7B;AAEA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AACjD,IAAMC,aAAa,GAAC;AAChBC,EAAAA,GAAG,EAAC,MADY;AAEhBF,EAAAA,OAAO,EAAPA,OAFgB;AAGhBG,EAAAA,SAAS,EAAC,CAAC,MAAD,CAHM,CAGO;;AAHP,CAApB;AAKA,IAAMC,WAAW,GAACV,eAAe,CAAC;AAC9BW,EAAAA,IAAI,EAACV,WADyB;AAE9BW,EAAAA,IAAI,EAACV,WAFyB;AAG9BW,EAAAA,SAAS,EAACT,gBAHoB;AAI9BU,EAAAA,IAAI,EAACX;AAJyB,CAAD,CAAjC;AAMA,eAAeE,cAAc,CAACE,aAAD,EAAeG,WAAf,CAA7B,C,CAA4D","sourcesContent":["import {combineReducers} from 'redux';\r\nimport userReducer from './user/user-reducer';\r\nimport cartReducer from './cart/cart.reducer'\r\nimport shopReducer from './shop/shop-reducer'\r\nimport directoryReducer from './directory/directory.reducer'\r\nimport {persistReducer} from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage'  //locaalstorage from redux\r\nconst persistConfig={\r\n    key:'root',\r\n    storage,\r\n    whitelist:['cart']     ///only reducer which we want to persist \r\n}\r\nconst rootReducer=combineReducers({\r\n    user:userReducer,\r\n    cart:cartReducer,\r\n    directory:directoryReducer,\r\n    shop:shopReducer\r\n})\r\nexport default persistReducer(persistConfig,rootReducer) ;  ///modifying our rootreducer to take local storage from redux"]},"metadata":{},"sourceType":"module"}
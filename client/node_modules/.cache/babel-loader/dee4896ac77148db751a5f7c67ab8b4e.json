{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nexport var addItemToCart = function addItemToCart(cartItems, cartItemToAdd) {\n  var existingCartItem = cartItems.find(function (cartItem) {\n    return cartItem.id === cartItemToAdd.id;\n  });\n\n  if (existingCartItem) {\n    return cartItems.map(function (cartItem) {\n      return cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItem, {\n        quantity: cartItem.quantity + 1\n      }) : cartItem;\n    });\n  }\n\n  return [].concat(_toConsumableArray(cartItems), [_objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })]);\n};\nexport var removeItemFromCart = function removeItemFromCart(cartItems, cartItemToRemove) {\n  var existingCartItem = cartItems.find(function (cartItem) {\n    return cartItem.id === cartItemToRemove.id;\n  });\n\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(function (cartItem) {\n      return cartItem.id !== cartItemToRemove.id;\n    }); //bcoz filter keeps the vale of which the condition returns true so if their id does not match we want to keep in cart and if it does matches we want to remove it from cart\n  }\n\n  return cartItems.map(function (cartItem) {\n    return cartItem.id === cartItemToRemove.id ? _objectSpread({}, cartItem, {\n      quantity: cartItem.quantity - 1\n    }) : cartItem;\n  } //decreases the quantity if id are euals else keep all the cartitems\n  );\n};","map":{"version":3,"sources":["D:/monsters-rolodex/ECOMMERCE-AMAZON-LIKE-WEBSITE/client/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":";;AAAA,OAAO,IAAMA,aAAa,GAAC,SAAdA,aAAc,CAACC,SAAD,EAAWC,aAAX,EAA2B;AAClD,MAAMC,gBAAgB,GAACF,SAAS,CAACG,IAAV,CAAe,UAAAC,QAAQ;AAAA,WAAEA,QAAQ,CAACC,EAAT,KAAcJ,aAAa,CAACI,EAA9B;AAAA,GAAvB,CAAvB;;AACA,MAAGH,gBAAH,EAAoB;AAChB,WAAOF,SAAS,CAACM,GAAV,CAAc,UAAAF,QAAQ;AAAA,aAAEA,QAAQ,CAACC,EAAT,KAAcJ,aAAa,CAACI,EAA5B,qBAAqCD,QAArC;AAA8CG,QAAAA,QAAQ,EAACH,QAAQ,CAACG,QAAT,GAAmB;AAA1E,WAA8EH,QAAhF;AAAA,KAAtB,CAAP;AACH;;AACD,sCAAWJ,SAAX,sBAAyBC,aAAzB;AAAuCM,IAAAA,QAAQ,EAAC;AAAhD;AACH,CANM;AAQP,OAAO,IAAMC,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACR,SAAD,EAAWS,gBAAX,EAA8B;AAC9D,MAAMP,gBAAgB,GAACF,SAAS,CAACG,IAAV,CAAe,UAAAC,QAAQ;AAAA,WAAEA,QAAQ,CAACC,EAAT,KAAcI,gBAAgB,CAACJ,EAAjC;AAAA,GAAvB,CAAvB;;AACA,MAAGH,gBAAgB,CAACK,QAAjB,KAA4B,CAA/B,EAAiC;AACjC,WAAOP,SAAS,CAACU,MAAV,CAAiB,UAAAN,QAAQ;AAAA,aAAEA,QAAQ,CAACC,EAAT,KAAcI,gBAAgB,CAACJ,EAAjC;AAAA,KAAzB,CAAP,CADiC,CACyC;AACzE;;AACD,SAAOL,SAAS,CAACM,GAAV,CACH,UAAAF,QAAQ;AAAA,WACRA,QAAQ,CAACC,EAAT,KAAcI,gBAAgB,CAACJ,EAA/B,qBAAsCD,QAAtC;AAA+CG,MAAAA,QAAQ,EAACH,QAAQ,CAACG,QAAT,GAAkB;AAA1E,SAA6EH,QADrE;AAAA,GADL,CAEoF;AAFpF,GAAP;AAIC,CATM","sourcesContent":["export const addItemToCart=(cartItems,cartItemToAdd)=>{\r\n    const existingCartItem=cartItems.find(cartItem=>cartItem.id===cartItemToAdd.id);\r\n    if(existingCartItem){\r\n        return cartItems.map(cartItem=>cartItem.id===cartItemToAdd.id ? {...cartItem,quantity:cartItem.quantity +1}: cartItem)\r\n    }\r\n    return [...cartItems,{...cartItemToAdd,quantity:1}]\r\n} \r\n\r\nexport const removeItemFromCart=(cartItems,cartItemToRemove)=>{\r\nconst existingCartItem=cartItems.find(cartItem=>cartItem.id===cartItemToRemove.id)\r\nif(existingCartItem.quantity===1){\r\nreturn cartItems.filter(cartItem=>cartItem.id!==cartItemToRemove.id)      //bcoz filter keeps the vale of which the condition returns true so if their id does not match we want to keep in cart and if it does matches we want to remove it from cart\r\n}\r\nreturn cartItems.map(\r\n    cartItem=>\r\n    cartItem.id===cartItemToRemove.id?{...cartItem,quantity:cartItem.quantity-1}:cartItem  //decreases the quantity if id are euals else keep all the cartitems\r\n)\r\n}"]},"metadata":{},"sourceType":"module"}